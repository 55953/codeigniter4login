Hello Alex;

First of all i gladly wanted to thank you for these lasts contributions you put out to share here on GitHub, it is a good work you are doing.
without too much overdue, i know you must be busy so i wanted to ask you a simple question i know you can help. I have the following code to
check for password strength, it is simular to CI3 community Auth/Application/Model/Validation_collables. I can check password but i can set custom
errors on Validation_collables._check_password_strength.

<?php
namespace App\Validation;
use App\Models\UserModel;

class Validation_callables extends UserModel {

	private $config;

	public function __construct()
	{
		$this->config = config('Password_strength');
		// echo'<pre>'; print_r($this->config);echo '</pre>'; die();
	}

	public function _check_password_strength( string $str, string $fields, array $data):bool
	{
		// Password length
		$max = $this->config->{'max_chars_for_password'} > 0
			? $this->config->{'max_chars_for_password'}
			: '';
		$regex = '(?=.{' . $this->config->{'min_chars_for_password'} . ',' . $max . '})';
		$error = '<li>At least ' . $this->config->{'min_chars_for_password'} . ' characters</li>';

		if( $this->config->{'max_chars_for_password'} > 0 )
			$error .= '<li>Not more than ' . $this->config->{'max_chars_for_password'} . ' characters</li>';
		
		// Digit(s) required
		if( $this->config->{'min_digits_for_password'} > 0 )
		{
			$regex .= '(?=(?:.*[0-9].*){' . $this->config->{'min_digits_for_password'} . ',})';
			$plural = $this->config->{'min_digits_for_password'} > 1 ? 's' : '';
			$error .= '<li>' . $this->config->{'min_digits_for_password'} . ' number' . $plural . '</li>';
		}
		
		// Lower case letter(s) required
		if( $this->config->{'min_lowercase_chars_for_password'} > 0 )
		{
			$regex .= '(?=(?:.*[a-z].*){' . $this->config->{'min_lowercase_chars_for_password'} . ',})';
			$plural = $this->config->{'min_lowercase_chars_for_password'} > 1 ? 's' : '';
			$error .= '<li>' . $this->config->{'min_lowercase_chars_for_password'} . ' lower case letter' . $plural . '</li>';
		}
		
		// Upper case letter(s) required
		if( $this->config->{'min_uppercase_chars_for_password'} > 0 )
		{
			$regex .= '(?=(?:.*[A-Z].*){' . $this->config->{'min_uppercase_chars_for_password'} . ',})';
			$plural = $this->config->{'min_uppercase_chars_for_password'} > 1 ? 's' : '';
			$error .= '<li>' . $this->config->{'min_uppercase_chars_for_password'} . ' upper case letter' . $plural . '</li>';
		}
		
		// Non-alphanumeric char(s) required
		if( $this->config->{'min_non_alphanumeric_chars_for_password'} > 0 )
		{
			$regex .= '(?=(?:.*[^a-zA-Z0-9].*){' . $this->config->{'min_non_alphanumeric_chars_for_password'} . ',})';
			$plural = $this->config->{'min_non_alphanumeric_chars_for_password'} > 1 ? 's' : '';
			$error .= '<li>' . $this->config->{'min_non_alphanumeric_chars_for_password'} . ' non-alphanumeric character' . $plural . '</li>';
		}

		if( preg_match( '/^' . $regex . '.*$/', $data['password']) )
		{
			return TRUE;
		}
		// $this->validation->set_message(//############I CAN'T FIND A WAY TO SET ERROR OUTPUT!
		// 	'_check_password_strength', 
		// 	'<span class="redfield">Password</span> must contain:
		// 		<ol>
		// 			' . $error . '
		// 		</ol>
		// 	</span>'
		// );
		return FALSE;
	}
  
  ----------------
  
  <?php namespace App\Controllers;

use \App\Libraries\OAuth;
use \OAuth2\Request;
use CodeIgniter\API\ResponseTrait;
use App\Models\UserModel;
use App\Validation\Validation_callables;
class User extends BaseController
{
    use ResponseTrait;

    public function index(){

        if ( ! is_file(APPPATH.'/views/user/login.php'))
            {
                // Whoops, we don't have a page for that!
                throw new \CodeIgniter\Exceptions\PageNotFoundException('/views/user/login.php');
            }
            helper('form');
            $data=[];
            $validation = \Config\Services::validation();
            $data['title'] = ucfirst('Sign In'); // Capitalize the first letter
            if ($this->request->getMethod() == 'post') {
                //let's do the validation here
                $rules = [
                    'email' => 'required|max_length[50]|valid_email',
                    'password' => 'required|min_length[8]|max_length[255]|validateUser[email,password]|_check_password_strength[$password]'
                ];
                $validationClab = new  Validation_callables;
                //echo '<pre>'; print_r($validationClab);echo '</pre>';die();
                $errors = [
                    'password' => [
                        'validateUser' => 'Email or Password don\'t match',
                        '_check_password_strength'=>'Your Password is too weak' //$validation->check($validationClab->_check_password_strength($this->request->getVar('password')))
                    ]
                ];
    
                if (! $this->validate($rules,$errors)) {
                    //echo '<pre>'; print_r($this->validator);echo'</pre>';die();
                    $data['validation'] = $this->validator;
                }else{
                    $model = new UserModel();
    
                    $user = $model->where('email', $this->request->getVar('email'))
                                                ->first();

                    $this->setUserSession($user);
                    
                    return redirect()->to('dashboard');
    
                }
            }
            echo view('template/header');
            echo view('user/login', $data);
            echo view('template/footer');
    }
-----------

In fact i didn't change anything to your code at all, i just wanted to see how this can work but i am being to, I think if you put those in your
App you will easly find where i am messing up. I hope you will be able to help me there.

Thanks

  
